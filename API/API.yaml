openapi: 3.0.3
info:
  title: URL Shortener
  description: |-
    This is a sample URL Shortener Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!


    Some useful links:
    - [The URL Shortener repository](https://github.com/nadeem-gamal/URLShortener)
    - [The source API definition for the URL Shortener](https://github.com/nadeem-gamal/URLShortener/blob/master/docs/API/API.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: nadeem.ng2@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:5000/
  - url: https://localhost:5001/
tags:
  - name: url
    description: Operations about URL
paths:
  /urlshortner/create/{url}/{size}:
    get:
      tags:
        - url
      summary: Create new short URL
      description: Returns a single category
      operationId: createShortURL
      parameters:
        - name: url
          in: path
          description: URL
          required: true
          schema:
            type: string
        - name: size
          in: path
          description: Short code size
          required: true
          schema:
            type: int
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/URL'
        '400':
          description: Invalid URL supplied
      security:
        - api_key: []
        - url_auth:
            - write:urls
            - read:urls
  /urlshortner/redirect/{short_code}:
    get:
      tags:
        - url
      summary: Return full URL
      description: ''
      operationId: redirect
      parameters:
        - name: short_code
          in: path
          description: short code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/URL'          
      security:
        - url_auth:
            - write:urls
            - read:urls

components:
  schemas:
    URL:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        full_url:
          type: string
          example: www.example.com
        short_code:
          type: string
          example: ABCD
        date_created:
          type: string
          format: date
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    URL:
      description: URL object that needs to be added to DB
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/URL'
  securitySchemes:
    url_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://localhost/oauth/authorize
          scopes:
            write:urls: modify urls in your account
            read:urls: read your urls
    api_key:
      type: apiKey
      name: api_key
      in: header
